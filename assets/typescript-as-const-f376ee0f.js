import{d as e,v as c,o as t,a as r,h as s,j as l,k as a,A as o}from"./app-9749d15e.js";const y="/assets/intellisense-e7791f21.png",A="/assets/rename-symbol-ac29a4c0.png",i={class:"markdown-body"},B=s("blockquote",null,[s("p",null,[a("這篇文章討論的是 TypeScript 特有的「常數斷言（Const Assertion）」語法，"),s("br"),a(" 和 JavaScript 宣告常數所使用的 "),s("code",{class:""},"const foo = 1"),a(" 是不同東西。")])],-1),D={id:"%E6%83%85%E5%A2%83%E4%B8%80%EF%BC%9A%E5%B8%B8%E6%95%B8%E5%AD%97%E4%B8%B2%E9%99%A3%E5%88%97",tabindex:"-1"},d=a("情境一：常數字串陣列 "),C={class:"header-anchor",href:"#%E6%83%85%E5%A2%83%E4%B8%80%EF%BC%9A%E5%B8%B8%E6%95%B8%E5%AD%97%E4%B8%B2%E9%99%A3%E5%88%97"},h={id:"%E6%83%85%E5%A2%83%E6%8F%8F%E8%BF%B0",tabindex:"-1"},g=a("情境描述 "),f={class:"header-anchor",href:"#%E6%83%85%E5%A2%83%E6%8F%8F%E8%BF%B0"},E=o(`<p><a href="https://www.typescriptlang.org/play?#code/MYewdgzgLgBCAOUCW4IwLwwNoHICmAhhAJ44A0MOYIATgLYEA25lAFgTQCY4C6MMAKAFRi8PDAAiSAGbSkwAK6MRGGCLEhpcRCkhYwCugCM8NHkMZ5YnGXMXLiALkm35SlZhwBzEJxicCOjAYdi4cGAB6CJhAXg3ARD2gA">🎡 TS Playground</a></p><p>想像我正在建立一個切換難易度的功能，有三種難度可選，先將他們宣告成陣列。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">options</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#C98A7D;">&#39;easy&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;normal&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hard&#39;</span><span style="color:#858585;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">options</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#B56959;">&#39;easy&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;normal&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hard&#39;</span><span style="color:#8E8F8B;">]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>接著再建立一個變數 <code class="">difficulty</code>，用來記錄目前選中的難易度。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">options</span><span style="color:#858585;">[</span><span style="color:#B8A965;">number</span><span style="color:#858585;">]</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">difficulty</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">options</span><span style="color:#858585;">[</span><span style="color:#6394BF;">0</span><span style="color:#858585;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">options</span><span style="color:#8E8F8B;">[</span><span style="color:#8C862B;">number</span><span style="color:#8E8F8B;">]</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">difficulty</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">options</span><span style="color:#8E8F8B;">[</span><span style="color:#296AA3;">0</span><span style="color:#8E8F8B;">]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>但仔細一看型別 <code class="">Difficulty</code> 居然是 <code class="">string</code>，這也太隨便了，因為這代表我可以把 <code class="">difficulty</code> 設成隨便一個字串，TypeScript 也不會阻止我。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#B8A965;">difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;安安&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 😑</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#8C862B;">difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;安安&#39;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 😑</span></span>
<span class="line"></span></code></pre></div></code></pre>`,7),u={id:"%E8%A7%A3%E6%B3%95",tabindex:"-1"},k=a("解法 "),F={class:"header-anchor",href:"#%E8%A7%A3%E6%B3%95"},_=o(`<p><a href="https://www.typescriptlang.org/play?#code/MYewdgzgLgBCAOUCW4IwLwwNoHICmAhhAJ44A0MOYIATgLYEA25lAFgTQCY4C6MRMUJCgAoEVGLw8MACJIAZvKTAArowkYYEqSHlxEKSFjAq6AIzw0eYxnlicFS1euIAuWY+VqNmfEVJiDopeLpo47Fw4MAD00TCAoOQiQU7exGEEZsBRsTCAvBuA1XtiIkLQMPIgIJoAFMkhEu5ywc4SAJQYAHwwAN4xAFQwAHRDML1xAL5iCMioAwzwNZ7Naeid5SALTaktbTnxQA">🎡 TS Playground</a></p><p>這時 <code class="">as const</code> （const assertion）就派上用場了！寫法就像<strong>型別斷言</strong>那樣。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">options</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#C98A7D;">&#39;easy&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;normal&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hard&#39;</span><span style="color:#858585;">]</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">const</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575;">// 或是使用尖括弧（tsx 以外的檔案才能用這種寫法）</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">options</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">&lt;</span><span style="color:#CB7676;">const</span><span style="color:#858585;">&gt;[</span><span style="color:#C98A7D;">&#39;easy&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;normal&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hard&#39;</span><span style="color:#858585;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">options</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#B56959;">&#39;easy&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;normal&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hard&#39;</span><span style="color:#8E8F8B;">]</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 或是使用尖括弧（tsx 以外的檔案才能用這種寫法）</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">options</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">&lt;</span><span style="color:#AB5959;">const</span><span style="color:#8E8F8B;">&gt;[</span><span style="color:#B56959;">&#39;easy&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;normal&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hard&#39;</span><span style="color:#8E8F8B;">]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>如此即可得到預期中準確的型別。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">difficulties</span><span style="color:#858585;">[</span><span style="color:#B8A965;">number</span><span style="color:#858585;">]</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// &quot;easy&quot; | &quot;normal&quot; | &quot;hard&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">difficulties</span><span style="color:#8E8F8B;">[</span><span style="color:#8C862B;">number</span><span style="color:#8E8F8B;">]</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &quot;easy&quot; | &quot;normal&quot; | &quot;hard&quot;</span></span>
<span class="line"></span></code></pre></div></code></pre><p>搭配 VSCode 的 IntelliSense 可以得到代碼提示，也不再怕手殘拼錯字。（快速鍵 <code class="">⌘ + I</code> 呼出）</p><p><img src="`+y+`" alt=""></p><p><code class="">map()</code> 等回調函式的參數也會自動推斷出型別。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#758575;">// 假設有另一個函式參數要求傳入 \`Difficulty\`</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">foo</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">(</span><span style="color:#B8A965;">difficulty</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">/* ... */</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575;">// difficulty: &quot;easy&quot; | &quot;normal&quot; | &quot;hard&quot;</span></span>
<span class="line"><span style="color:#B8A965;">options</span><span style="color:#858585;">.</span><span style="color:#A1B567;">map</span><span style="color:#858585;">(</span><span style="color:#B8A965;">difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=&gt;</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">foo</span><span style="color:#858585;">(</span><span style="color:#B8A965;">difficulty</span><span style="color:#858585;">))</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#A0ADA0;">// 假設有另一個函式參數要求傳入 \`Difficulty\`</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">foo</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">difficulty</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// difficulty: &quot;easy&quot; | &quot;normal&quot; | &quot;hard&quot;</span></span>
<span class="line"><span style="color:#8C862B;">options</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">map</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">foo</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">difficulty</span><span style="color:#8E8F8B;">))</span></span>
<span class="line"></span></code></pre></div></code></pre><p>當然你也可以一開始就先把型別定義好，再以型別約束變數。<br> 但我個人通常不太這麼做，因為這樣會重複出現很雷同的代碼，相當於需要費力維護多個真相來源。例如：</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;easy&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;normal&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hard&#39;</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">options</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Difficulty</span><span style="color:#858585;">[]</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#C98A7D;">&#39;easy&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;normal&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hard&#39;</span><span style="color:#858585;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;easy&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;normal&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hard&#39;</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">options</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Difficulty</span><span style="color:#8E8F8B;">[]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#B56959;">&#39;easy&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;normal&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hard&#39;</span><span style="color:#8E8F8B;">]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>不過把型別抽出來單獨定義，還是有額外好處的。假設因為需求改變，需要把 <code class="">&#39;easy&#39;</code> 改名成 <code class="">&#39;simple&#39;</code>，就可以活用 VSCode 的 <strong>重新命名符號（Rename Symbol）</strong> 功能來快速重構（從右鍵選單或快速鍵 <code class="">F2</code> 呼出）。</p><p>而這便是 <code class="">as const</code> 無法做到的，因此建議還是根據實際使用場景做權衡。</p><p><img src="`+A+'" alt=""></p>',14),b={id:"%E6%83%85%E5%A2%83%E4%BA%8C%EF%BC%9A%E6%97%A5%E6%9C%9F%E5%8D%80%E9%96%93%E7%9A%84-tuple",tabindex:"-1"},w=a("情境二：日期區間的 tuple "),m={class:"header-anchor",href:"#%E6%83%85%E5%A2%83%E4%BA%8C%EF%BC%9A%E6%97%A5%E6%9C%9F%E5%8D%80%E9%96%93%E7%9A%84-tuple"},v={id:"%E6%83%85%E5%A2%83%E6%8F%8F%E8%BF%B0-1",tabindex:"-1"},x=a("情境描述 "),q={class:"header-anchor",href:"#%E6%83%85%E5%A2%83%E6%8F%8F%E8%BF%B0-1"},S=o(`<p><a href="https://www.typescriptlang.org/play?#code/MYewdgzgLgBATgQzAcwKYwLwwNplQdxgBEEpUAKASgBoY9CSyqBdAKFYDMBXMYKAS3AwOIEDHKIUqAFw5GqWvOaUYAbxgB6AFQwAdPphaNMAL7sRICUjQqNxwLwbgar2gA">🎡 TS Playground</a></p><p>想像我正在建立一個從開始到結束的<strong>時間區間</strong>變數 <code class="">range</code>，一樣宣告成陣列。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">range</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">(),</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">()]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">range</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">(),</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">()]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>還有一個參數是時間區間的函式。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">foo</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">(</span><span style="color:#B8A965;">range</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#A1B567;">Date</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Date</span><span style="color:#858585;">])</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">/* ... */</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">foo</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">range</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#6C7834;">Date</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Date</span><span style="color:#8E8F8B;">])</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span></code></pre></div></code></pre><p>接著試著把 <code class="">range</code> 放入函式 <code class="">foo()</code> 中，但卻出現型別不相容的錯誤。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#A1B567;">foo</span><span style="color:#858585;">(</span><span style="color:#B8A965;">range</span><span style="color:#858585;">)</span></span>
<span class="line"><span style="color:#758575;">// Argument of type &#39;Date[]&#39; is not assignable to parameter of type &#39;[Date, Date]&#39;.</span></span>
<span class="line"><span style="color:#758575;">//   Target requires 2 element(s) but source may have fewer.(2345)</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#6C7834;">foo</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">)</span></span>
<span class="line"><span style="color:#A0ADA0;">// Argument of type &#39;Date[]&#39; is not assignable to parameter of type &#39;[Date, Date]&#39;.</span></span>
<span class="line"><span style="color:#A0ADA0;">//   Target requires 2 element(s) but source may have fewer.(2345)</span></span>
<span class="line"></span></code></pre></div></code></pre><p>分析跳出的錯誤得知：<br><strong><code class="">Date[]</code> 不可指派給 <code class="">[Date, Date]</code></strong>，因為函式只接受長度剛好是 <code class="">2</code> 的陣列，但 <code class="">range</code> 卻可能是任何長度的陣列。</p><p>TypeScript 說的確實沒錯，即使原本 <code class="">range</code> 是用 <code class="">const</code> 宣告，但我在中途還是有機會偷改他。例如 push 新的東西進去，或是執行 <code class="">range.length = 0</code> 來清空陣列，這些都會改變陣列的長度。</p>`,9),T={id:"%E8%A7%A3%E6%B3%95-1",tabindex:"-1"},M=a("解法 "),Y={class:"header-anchor",href:"#%E8%A7%A3%E6%B3%95-1"},I=o(`<p><a href="https://www.typescriptlang.org/play?#code/MYewdgzgLgBATgQzAcwKYwLwwNowFAwxioDuMAIglKgBQD0AVDAHSswN0CUANPocWUrV6TVs3Zc8AXRgIIMUJCh48AMwCuYYFACW4GKpAgYNRClQAueKgQATcABsAnjiGpebqZxgBvGIxY2DhgAXxVDEFMkNG86OhhAUHIVKCcAB3QAGVQUKAALTBgU9JBVeGjUZgds5Dz-eIAmIA">🎡 TS Playground</a></p><p>試著加上 <code class="">as const</code>。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">range</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">(),</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">()]</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">const</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">range</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">(),</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">()]</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span></span>
<span class="line"></span></code></pre></div></code></pre><p>檢查 <code class="">range</code> 的型別，會發現它從原本的 <code class="">Date[]</code> 變成 <code class="">readonly [Date, Date]</code> 了。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">MyRange</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">range</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// readonly [23, 28]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">MyRange</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">range</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// readonly [23, 28]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>此後便無法再對 <code class="">range</code> 進行任何會改變它的操作了。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#B8A965;">range</span><span style="color:#858585;">.</span><span style="color:#429988;">length</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">0</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 🚫</span></span>
<span class="line"><span style="color:#B8A965;">range</span><span style="color:#858585;">.</span><span style="color:#A1B567;">push</span><span style="color:#858585;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">())</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 🚫</span></span>
<span class="line"><span style="color:#B8A965;">range</span><span style="color:#858585;">.</span><span style="color:#A1B567;">reverse</span><span style="color:#858585;">()</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 🚫</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">.</span><span style="color:#2F8A89;">length</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">0</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 🚫</span></span>
<span class="line"><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">push</span><span style="color:#8E8F8B;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">())</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 🚫</span></span>
<span class="line"><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">.</span><span style="color:#6C7834;">reverse</span><span style="color:#8E8F8B;">()</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 🚫</span></span>
<span class="line"></span></code></pre></div></code></pre><p>接著即可成功將 <code class="">range</code> 傳入函式。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#D4976C;">range</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">(),</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">Date</span><span style="color:#858585;">()]</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">const</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">foo</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">(</span><span style="color:#B8A965;">range</span><span style="color:#CB7676;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#A1B567;">Date</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Date</span><span style="color:#858585;">])</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">/* ... */</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A1B567;">foo</span><span style="color:#858585;">(</span><span style="color:#B8A965;">range</span><span style="color:#858585;">)</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// ✅</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">range</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">(),</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#B58451;">Date</span><span style="color:#8E8F8B;">()]</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">foo</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">range</span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#6C7834;">Date</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Date</span><span style="color:#8E8F8B;">])</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6C7834;">foo</span><span style="color:#8E8F8B;">(</span><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// ✅</span></span>
<span class="line"></span></code></pre></div></code></pre><p>留意函式的參數型別多加上了 <code class="">readonly</code> 關鍵字，那是用來告訴 TypeScript，這個函式不會去動到 <code class="">range</code>，例如執行 <code class="">range[0] = ...</code> 來重新賦值陣列的某個項目。</p><p>而試圖存取超出陣列範圍的項目時，TypeScript 也會提示錯誤。（JavaScript 的情況則是會無聲地得到 <code class="">undefined</code>）</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#758575;">// ❌ Tuple type &#39;[Date, Date]&#39; of length &#39;2&#39; has no element at index &#39;100&#39;.(2493)</span></span>
<span class="line"><span style="color:#B8A965;">range</span><span style="color:#858585;">[</span><span style="color:#6394BF;">100</span><span style="color:#858585;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#A0ADA0;">// ❌ Tuple type &#39;[Date, Date]&#39; of length &#39;2&#39; has no element at index &#39;100&#39;.(2493)</span></span>
<span class="line"><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">[</span><span style="color:#296AA3;">100</span><span style="color:#8E8F8B;">]</span></span>
<span class="line"></span></code></pre></div></code></pre><p>甚至可以很明確地得知參數 <code class="">length</code> 的型別為 <code class="">2</code></p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">type</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">Length</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">typeof</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">range</span><span style="color:#858585;">.</span><span style="color:#429988;">length</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 2</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">type</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">Length</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">typeof</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">range</span><span style="color:#8E8F8B;">.</span><span style="color:#2F8A89;">length</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 2</span></span>
<span class="line"></span></code></pre></div></code></pre>`,14),L={id:"%E7%B8%BD%E7%B5%90",tabindex:"-1"},N=a("總結 "),Q={class:"header-anchor",href:"#%E7%B8%BD%E7%B5%90"},V=s("p",null,[s("code",{class:""},"as const"),a(" 套用在不同型別的變數上會得到不同的效果：")],-1),K={id:"string%E3%80%81number%E3%80%81boolean",tabindex:"-1"},U=a("string、number、boolean "),G={class:"header-anchor",href:"#string%E3%80%81number%E3%80%81boolean"},J=o(`<p>字面型別（literal type）加上 <code class="">as const</code> 後，型別就不會被「拓寬」，例如字串 <code class="">&#39;hello&#39;</code> 不會被推斷成 <code class="">string</code>，而是會維持原樣。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">a</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// string</span></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">b</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// &#39;hello&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">c</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">123</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// number</span></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">d</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">123</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// 123</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">e</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">true</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// boolean</span></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">f</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">true</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// true</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// string</span></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">b</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">const</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// &#39;hello&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">c</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">123</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// number</span></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">d</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">123</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">const</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 123</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">e</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">true</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// boolean</span></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">f</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">true</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">const</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// true</span></span>
<span class="line"></span></code></pre></div></code></pre>`,2),R={id:"%E9%99%A3%E5%88%97",tabindex:"-1"},z=a("陣列 "),H={class:"header-anchor",href:"#%E9%99%A3%E5%88%97"},O=o(`<p>陣列會被轉換成 readonly 的 tuple，也就是：</p><ol><li>唯獨，陣列裡面的值始終相同，也不能被修改</li><li>長度永遠固定，不能執行 <code class="">push()</code> 或 <code class="">pop()</code> 等操作</li></ol><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">a</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#6394BF;">123</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#858585;">]</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// (string | number)[]</span></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">b</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">[</span><span style="color:#6394BF;">123</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#858585;">]</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#A1B567;">const</span><span style="color:#DBD7CA;"> </span><span style="color:#758575;">// readonly [123, &#39;hello&#39;]</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#296AA3;">123</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#8E8F8B;">]</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// (string | number)[]</span></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">b</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">[</span><span style="color:#296AA3;">123</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#8E8F8B;">]</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#6C7834;">const</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// readonly [123, &#39;hello&#39;]</span></span>
<span class="line"></span></code></pre></div></code></pre>`,3),P={id:"%E7%89%A9%E4%BB%B6",tabindex:"-1"},Z=a("物件 "),X={class:"header-anchor",href:"#%E7%89%A9%E4%BB%B6"},j=o(`<p>物件裡的<strong>所有</strong>屬性都會被加上 readonly，並且裡面的 string、number、boolean 和陣列值都會比照上述處理，型別不會被拓寬。</p><pre><code class="language-typescript"><div class="shiki-container"><pre class="shiki shiki-dark" style="background-color:#121212;"><code class=""><span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">a</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">text</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">nested</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">count</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">123</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span></span>
<span class="line"><span style="color:#758575;">// {</span></span>
<span class="line"><span style="color:#758575;">//   text: string</span></span>
<span class="line"><span style="color:#758575;">//   nested: { count: number }</span></span>
<span class="line"><span style="color:#758575;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CA;"> </span><span style="color:#B8A965;">b</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">text</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#C98A7D;">&#39;hello&#39;</span><span style="color:#858585;">,</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">nested</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">{</span><span style="color:#DBD7CA;"> </span><span style="color:#E0A569;">count</span><span style="color:#858585;">:</span><span style="color:#DBD7CA;"> </span><span style="color:#6394BF;">123</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#858585;">}</span><span style="color:#DBD7CA;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CA;"> </span><span style="color:#CB7676;">const</span></span>
<span class="line"><span style="color:#758575;">// {</span></span>
<span class="line"><span style="color:#758575;">//   readonly text: &quot;hello&quot;</span></span>
<span class="line"><span style="color:#758575;">//   readonly nested: { readonly count: 123; }</span></span>
<span class="line"><span style="color:#758575;">// }</span></span>
<span class="line"></span></code></pre><pre class="shiki shiki-light" style="background-color:#ffffff;"><code class=""><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#B58451;">text</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B58451;">nested</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#B58451;">count</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">123</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span></span>
<span class="line"><span style="color:#A0ADA0;">// {</span></span>
<span class="line"><span style="color:#A0ADA0;">//   text: string</span></span>
<span class="line"><span style="color:#A0ADA0;">//   nested: { count: number }</span></span>
<span class="line"><span style="color:#A0ADA0;">// }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#8C862B;">b</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#B58451;">text</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">&#39;hello&#39;</span><span style="color:#8E8F8B;">,</span><span style="color:#393A34;"> </span><span style="color:#B58451;">nested</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">{</span><span style="color:#393A34;"> </span><span style="color:#B58451;">count</span><span style="color:#8E8F8B;">:</span><span style="color:#393A34;"> </span><span style="color:#296AA3;">123</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#8E8F8B;">}</span><span style="color:#393A34;"> </span><span style="color:#1C6B48;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span></span>
<span class="line"><span style="color:#A0ADA0;">// {</span></span>
<span class="line"><span style="color:#A0ADA0;">//   readonly text: &quot;hello&quot;</span></span>
<span class="line"><span style="color:#A0ADA0;">//   readonly nested: { readonly count: 123; }</span></span>
<span class="line"><span style="color:#A0ADA0;">// }</span></span>
<span class="line"></span></code></pre></div></code></pre>`,2),W={id:"%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99",tabindex:"-1"},$=a("參考資料 "),ss={class:"header-anchor",href:"#%E5%8F%83%E8%80%83%E8%B3%87%E6%96%99"},as=s("p",null,[s("a",{href:"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#const-assertions"},"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html#const-assertions")],-1),es={title:"讓 TypeScript 的 as const 救你一命",date:"2021/12/03",tags:["TypeScript"],original:"https://hackmd.io/@xq/as-const"},cs="",ts=e({__name:"typescript-as-const",setup(ns,{expose:p}){return p({frontmatter:{title:"讓 TypeScript 的 as const 救你一命",date:"2021/12/03",tags:["TypeScript"],original:"https://hackmd.io/@xq/as-const"},excerpt:void 0}),(ls,os)=>{const n=c("icon-link");return t(),r("div",i,[B,s("h2",D,[d,s("a",C,[l(n)])]),s("h3",h,[g,s("a",f,[l(n)])]),E,s("h3",u,[k,s("a",F,[l(n)])]),_,s("h2",b,[w,s("a",m,[l(n)])]),s("h3",v,[x,s("a",q,[l(n)])]),S,s("h3",T,[M,s("a",Y,[l(n)])]),I,s("h3",L,[N,s("a",Q,[l(n)])]),V,s("h4",K,[U,s("a",G,[l(n)])]),J,s("h4",R,[z,s("a",H,[l(n)])]),O,s("h4",P,[Z,s("a",X,[l(n)])]),j,s("h2",W,[$,s("a",ss,[l(n)])]),as])}}});export{ts as default,cs as excerpt,es as frontmatter};
